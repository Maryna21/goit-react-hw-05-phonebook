{"version":3,"sources":["components/ContactList/transitions/addTransition.module.css","components/Filter/filter.module.css","components/ContactForm/contactForm.module.css","app.module.css","components/Container/container.module.css","logoTransition.module.css","components/Error/error.module.css","components/Error/errorTransition.module.css","components/ContactForm/contactForm.js","svg/cross.js","components/ContactList/contactList.js","components/Filter/filter.js","components/Container/container.js","components/Error/error.js","App.js","reportWebVitals.js","index.js","components/ContactList/contactList.module.css"],"names":["module","exports","ContactForm","loginInputId","shortid","generate","state","contacts","name","number","handleNameChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onAddContact","reset","className","s","contactForm","onSubmit","this","labelForm","htmlFor","inputForm","type","id","onChange","buttonContactForm","Component","Cross","data-name","fill","width","height","viewBox","xmlns","rx","transform","x","y","ContactList","onDeleteContact","TransitionGroup","component","list","map","CSSTransition","timeout","classNames","addTransition","appear","unmountOnExit","item","buttonDelete","onClick","Filter","onChangeFilter","filter","label","input","e","target","Container","children","container","Error","in","errorTransition","box","App","error","addContact","contact","prevState","find","setTimeout","deleteContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","logoTransition","title","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bd57790.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"addTransition_enter__3Z_LA\",\"enterActive\":\"addTransition_enterActive__3A6JT\",\"exit\":\"addTransition_exit__2pRWX\",\"exitActive\":\"addTransition_exitActive__sk3MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1EaBe\",\"input\":\"filter_input__1g0Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2leNd\",\"labelForm\":\"contactForm_labelForm__108mt\",\"inputForm\":\"contactForm_inputForm__2N457\",\"buttonContactForm\":\"contactForm_buttonContactForm__2b9Ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__2fbQI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"logoTransition_appear__3AKSh\",\"appearActive\":\"logoTransition_appearActive__2IOna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"error_box__2AiIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"errorTransition_enter__2_wav\",\"enterActive\":\"errorTransition_enterActive__2qmF0\",\"exit\":\"errorTransition_exit__3P-rp\",\"exitActive\":\"errorTransition_exitActive__3bF8k\"};","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport React, { Component } from 'react';\nimport s from 'components/ContactForm/contactForm.module.css'\n\nexport default class ContactForm extends Component{\n    loginInputId = shortid.generate();\n    state = {\n        contacts: [],\n        name: '',\n        number: ''\n      }\n      handleNameChange=event=>{\n        this.setState({[event.currentTarget.name]:event.currentTarget.value});\n      }\n        handleSubmit = event => {\n          event.preventDefault();\n         this.props.onAddContact(this.state);\n         this.reset();\n        }\n        reset = () => {\n            this.setState({name: '', number:''})\n        }\n        render() {\n            return (\n              <form className={s.contactForm} onSubmit={this.handleSubmit}>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Name</label>\n                <input className={s.inputForm} type=\"text\" name=\"name\" id={this.loginInputId} value={this.state.name} onChange={this.handleNameChange}/>\n                <label className={s.labelForm} htmlFor={this.loginInputId}>Number</label>\n                <input className={s.inputForm}  type=\"tel\" name=\"number\" id={this.loginInputId} value={this.state.number} onChange={this.handleNameChange}/>\n                <button className={s.buttonContactForm}type=\"submit\">Add contact</button>\n              </form>\n            );\n          }}\n\n          ContactForm.propTypes = {\n            handleSubmit: PropTypes.func,\n            onAddContact: PropTypes.func,\n            loginInputId: PropTypes.func,\n            name: PropTypes.string,\n            number: PropTypes.number,\n         };","import React from 'react';\n const Cross = ()=>{\n    return(\n  <svg data-name=\"Layer 2\" fill=\"white\" width=\"60\" height=\"60\" id=\"bcc87848-35d3-4b8c-bef5-f50bbd1dee72\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(19 45.87) rotate(-135)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/><rect height=\"2.5\" rx=\"1.25\" transform=\"translate(-7.87 19) rotate(-45)\" width=\"15.435\" x=\"11.282\" y=\"17.75\"/></svg>\n)\n}\nexport default Cross;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from 'components/ContactList/contactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport Cross from 'svg/cross';\n\nconst ContactList = ({contacts, onDeleteContact})=>(\n    <TransitionGroup component=\"ul\" className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <CSSTransition key={id} timeout={250} classNames={addTransition} appear={true} unmountOnExit>\n        <li className={s.item}>\n          <div>{name}</div>\n          <div className={s.number}>{number}</div>\n          <button className={s.buttonDelete} type=\"button\" onClick={() => onDeleteContact(id)}><Cross/>\n      </button>\n        </li>\n        </CSSTransition>\n    ))}\n  </TransitionGroup>\n\n)\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.number,\n    }),\n  )\n};\nexport default ContactList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CSSTransition } from 'react-transition-group';\nimport addTransition from 'components/ContactList/transitions/addTransition.module.css';\nimport s from 'components/Filter/filter.module.css';\n\nexport default function Filter({value, onChangeFilter}){\n    return ( \n        \n        <CSSTransition timeout={250} classNames={addTransition} appear={true}>\n            <form className={s.filter}>\n            <label className={s.label}>Find contacts by name</label>\n                <input className={s.input} type=\"name\" value={value} onChange={e => onChangeFilter(e.target.value)} />\n            </form>\n            </CSSTransition>  \n            \n    )\n}\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func,\n };","import s from 'components/Container/container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport s from 'components/Error/error.module.css';\nimport errorTransition from 'components/Error/errorTransition.module.css';\nconst Error = () => {\n    return (\n         <CSSTransition\n            in={true}\n            timeout={250}\n            classNames={errorTransition}\n        >\n            <div className={s.box}>Contact is already exists!</div>\n            </CSSTransition>\n    )\n}\nexport default Error;","import shortid from 'shortid';\nimport './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm/contactForm';\nimport ContactList from 'components/ContactList/contactList';\nimport Filter from 'components/Filter/filter';\nimport s from 'app.module.css';\nimport Container from 'components/Container/container';\nimport { CSSTransition } from 'react-transition-group';\nimport logoTransition from 'logoTransition.module.css';\nimport Error from 'components/Error/error';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    error: false,\n  }\n\n  addContact = ({name, number}) => {\n    const contact = {\n        id: shortid.generate(),\n        name,\n        number: number,\n    };\n    this.setState(prevState =>{\n      if (this.state.contacts.find((contact) => contact.name === name)) {\n        this.setState({ error: true, })\n        return setTimeout(() => this.setState({ error: false, }), 500);\n      }\n      else{\n      return {\n          contacts: [...prevState.contacts, contact],}}\n  })\n};\n\ndeleteContact = contactId =>{\n  this.setState(prevState =>({\n    contacts: prevState.contacts.filter(contact => contact.id!== contactId),\n  }))\n \n}\n\nchangeFilter = filter => {\n  this.setState({filter});\n}\n  \ngetVisibleContacts = ()=>{\n  const {contacts, filter} = this.state;\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()), \n    )\n}\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if(parsedContacts){\n    this.setState({ contacts: parsedContacts });}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  \n  render() {\n    const {filter, error} = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames={logoTransition}\n        unmountOnExit\n        >\n          <h1 className={s.title}>Phonebook</h1>\n          </CSSTransition>\n     <ContactForm onAddContact={this.addContact} />\n     {visibleContacts.length > 1 && <Filter value={filter} onChangeFilter ={this.changeFilter}/>}\n        {visibleContacts && <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />}\n        {error&&<Error/>}\n      </Container>\n       \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"contactList_buttonDelete__1KIRp\",\"item\":\"contactList_item__1Zfmy\",\"number\":\"contactList_number__PxfHE\"};"],"sourceRoot":""}